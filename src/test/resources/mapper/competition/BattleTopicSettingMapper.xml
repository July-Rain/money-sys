<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawschool.dao.competition.BattleTopicSettingDao">
<!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！-->
    <resultMap id="BaseResultMap" type="com.lawschool.beans.competition.BattleTopicSetting">
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="FOREIGN_KEY_ID" property="foreignKeyId" jdbcType="VARCHAR" />
        <result column="TYPE" property="type" jdbcType="VARCHAR" />
        <result column="QUESTION_DIFFICULTY" property="questionDifficulty" jdbcType="VARCHAR" />
        <result column="WHETHER_GET_INTEGRAL" property="whetherGetIntegral" jdbcType="VARCHAR" />
        <result column="QUESTION_TYPE" property="questionType" jdbcType="VARCHAR" />
        <result column="SCORE" property="score" jdbcType="VARCHAR" />
        <result column="KNOWLEDGE_ID" property="knowledgeId" jdbcType="VARCHAR" />
        <result column="HOW_MANY_SMALL" property="howManySmall" jdbcType="INTEGER" />
        <result column="BACKUP1" property="backup1" jdbcType="VARCHAR" />
        <result column="BACKUP2" property="backup2" jdbcType="VARCHAR" />
        <result column="BACKUP3" property="backup3" jdbcType="VARCHAR" />
        <result column="BACKUP4" property="backup4" jdbcType="VARCHAR" />
        <result column="BACKUP5" property="backup5" jdbcType="VARCHAR" />

        <result column="CREATE_PEOPLE" property="createPeople" jdbcType="VARCHAR" />
        <result column="CREATE_DEPT" property="createDept" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />

    </resultMap>

    <select id="selectListByBaBaId" resultType="com.lawschool.beans.competition.BattleTopicSetting">

        SELECT
        LAW_BATTLE_TOPIC_SETTING.id as "id",
        LAW_BATTLE_TOPIC_SETTING.FOREIGN_KEY_ID as "foreignKeyId",
        LAW_BATTLE_TOPIC_SETTING.TYPE as "type",
				DICTCODE2VALE(LAW_BATTLE_TOPIC_SETTING.TYPE) as "typeName",

        LAW_BATTLE_TOPIC_SETTING.QUESTION_DIFFICULTY as "questionDifficulty",
				DICTCODE2VALE(LAW_BATTLE_TOPIC_SETTING.QUESTION_DIFFICULTY) as "questionDifficultyName",

        LAW_BATTLE_TOPIC_SETTING.WHETHER_GET_INTEGRAL as "whetherGetIntegral",
				CASE LAW_BATTLE_TOPIC_SETTING.WHETHER_GET_INTEGRAL WHEN '1' THEN '是'
        　　ELSE '否'
        END AS "whetherGetIntegralName" ,

        LAW_BATTLE_TOPIC_SETTING.SCORE as "score",
        LAW_BATTLE_TOPIC_SETTING.KNOWLEDGE_ID as "knowledgeId",
        topicId2name(LAW_BATTLE_TOPIC_SETTING.KNOWLEDGE_ID) as "knowledgeName",
        LAW_BATTLE_TOPIC_SETTING.HOW_MANY_SMALL as "howManySmall",
        LAW_BATTLE_TOPIC_SETTING.QUESTION_TYPE as "questionType",
				DICTCODE2VALE(LAW_BATTLE_TOPIC_SETTING.QUESTION_TYPE) as "questionTypeName"
        FROM
        LAW_BATTLE_TOPIC_SETTING
        WHERE  LAW_BATTLE_TOPIC_SETTING.FOREIGN_KEY_ID=#{id}
        ORDER BY LAW_BATTLE_TOPIC_SETTING.HOW_MANY_SMALL

    </select>

</mapper>